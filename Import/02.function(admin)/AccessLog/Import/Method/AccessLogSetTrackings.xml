<AML>
 <Item type="Method" id="E29C8C60B7A7456D80502114D23E25BB" action="add">
  <comments>called from onAfterUpdate on core ItemType</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[' Generic method: AccessLogSetTrackings
'
' Trigger: Called from client-side method
'
'MethodTemplateName=VBMain;
Dim inn As Innovator = Me.getInnovator()
Dim aml_cmd As Item

'Add or Remove AccessLog Function
Function Main() As Item

  Dim itemTypeId As String = Me.getID()
  Dim isAccessLog As Boolean = (Me.getProperty("is_access_log","0") = "1")

  ' get ID of Method
  aml_cmd = inn.getItemByKeyedName("Method","AccessLogAdd")
  Dim AddMetodId As String = aml_cmd.getID()
  
  ' add or remove Method from Form Events
  aml_cmd = mergeEventToForms(itemTypeId,AddMetodId,isAccessLog)
  If aml_cmd.isError() Then Return aml_cmd

  Return Me
End Function

'mergeEventToForms
Private Function mergeEventToForms (itemTypeId As String, methodId As String, addTracking As Boolean) As Item

  'get all forms and form events of this itemType
  Dim amlStr As String
  amlStr =  "" & _
 " <Item type='View' action='get' select='sort_order,source_id,related_id'>" & _
 " <source_id>" & itemTypeId & "</source_id>" & _
 " <related_id>" & _
 "  <Item type='Form' action='get' select='name' >" & _
 "   </Item>" & _
 " </related_id>" & _
 "</Item>"

  aml_cmd = Me.newItem("","")
  aml_cmd.loadAML(amlStr)
  Dim itemTypeViews As Item = aml_cmd.apply()
  If itemTypeViews.isError() Then Return itemTypeViews
  
  Dim i As Integer
  ' loop through every Form
  For i=0 To itemTypeViews.getItemCount()-1
    Dim formItem As Item = itemTypeViews.getItemByIndex(i).getRelatedItem()
    Dim formId As String = formItem.getID()
    
    'is_access_log=1：merge  is_access_log=0：delete
    Dim action As String = "merge"	
    If Not addTracking Then action = "delete" 
  
    amlStr= "[Form_Event].source_id='" & formId & "' and [Form_Event].related_id='" & methodId & "'"   
    aml_cmd = Me.newItem("Form Event",action)
    aml_cmd.setAttribute("where",amlStr)
    
    If action = "merge" Then
      aml_cmd.setProperty("source_id",formId)
      aml_cmd.setProperty("related_id",methodId)
      'aml_cmd.setProperty("form_event","onunload") 
    End If
  
    aml_cmd = aml_cmd.apply()
    
    If aml_cmd.isError() Then Return aml_cmd

    ' "aml_cmd.setProperty("form_event","onunload")"  execute
    If action = "merge" Then
      Dim SQLstr As String = "UPDATE [FORM_EVENT] SET [FORM_EVENT].form_event='onunload' WHERE " & amlStr
      inn.applySQL(SQLstr)      
    End If
  Next i	
  
  Return Me
  
End Function
	]]></method_code>
  <method_type>VB</method_type>
  <name>AccessLogSetTrackings</name>
 </Item>
</AML>