<AML>
 <Item type="Method" id="EF781CEB22FF47FB988980206EBE8E7C" action="add">
  <comments>called from Form Event</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA['
' Trigger: Called from client-side method
'
'
'MethodTemplateName=VBMain;
Dim inn As Innovator = Me.getInnovator()
Dim aml_cmd As Item

'Add AccessLog And Delete Old Log
Function Main() As Item

  Dim thisId As String = Me.getID()
  Dim thisType As String = Me.GetType()

  If thisId = "" Or thisType ="" Then
    Return Me
  End If

  Dim userId As String = inn.getUserID()
  
  'get this Item
  Dim selectProps As String = "id,config_id,current_state,classification,generation,major_rev,keyed_name"
  aml_cmd = Me.newItem(thisType, "get")
  aml_cmd.setId(thisId)
  aml_cmd.setAttribute("doGetItem","0")
  aml_cmd.setAttribute("serverEvents","0")
  aml_cmd.setAttribute("select",selectProps)
  Dim thisItem As Item = aml_cmd.apply()
  If thisItem.isError() Then Return thisItem
  
  aml_cmd = AddAccessLogItem(userId,thisItem)
  If aml_cmd.isError() Then Return aml_cmd
  
  Return Me
End Function

'Add and Delete AccessLog
Private Function AddAccessLogItem (userId As String, ByRef thisItem As Item) As Item

  'UtcTime
  Dim utcNow As DateTime = System.DateTime.UtcNow
  'CCO.Utilities.WriteDebug("accesslog.log",utcNow)     
  Dim tmpPtrn As String = "yyyy-MM-ddTHH:mm:ss"
  Dim utcNowStr As String = utcNow.toString(tmpPtrn, DateTimeFormatInfo.InvariantInfo)
  Dim sCntxt As I18NSessionContext = inn.getI18NSessionContext()
  'CurrentTime
  Dim neutralNow As String = sCntxt.ConvertUtcDateTimeToNeutral(utcNowStr, tmpPtrn)

  Dim whereStr As String = "[Access_Log].source_id='"& userId & "'" & _
  " and [Access_Log].item_id_string='"& thisItem.getID() &"'" & _
  " and [Access_Log].item_generation='"& thisItem.getProperty("generation","") &"'"
  Dim accessLogItem As Item = Me.newItem("Access Log","add")
  accessLogItem.setAttribute("serverEvents","0")
  accessLogItem.setAttribute("where",whereStr)
  accessLogItem.setProperty("source_id", userId)
  accessLogItem.setProperty("insert_date", neutralNow)
  accessLogItem.setProperty("item_type", thisItem.GetType())
  accessLogItem.setProperty("item_id_string", thisItem.getID())
  accessLogItem.setProperty("item_keyed_name_string", thisItem.getProperty("keyed_name",""))
  accessLogItem.setProperty("item_config_id_string", thisItem.getProperty("config_id",""))
  accessLogItem.setProperty("item_generation", thisItem.getProperty("generation",""))
  accessLogItem.setProperty("item_major_rev", thisItem.getProperty("major_rev",""))

  Dim plmIdentity As Aras.Server.Security.Identity = Aras.Server.Security.Identity.GetByName("Administrators")
  Dim PermissionWasSet As Boolean = Aras.Server.Security.Permissions.GrantIdentity(plmIdentity)

  'add accesslog
  accessLogItem = accessLogItem.apply()
  If accessLogItem.isError() Then 
      Return accessLogItem
  End If
  
  If (PermissionWasSet=True) Then
	Aras.Server.Security.Permissions.RevokeIdentity(plmIdentity)
  End If	

  Return accessLogItem 
End Function

]]></method_code>
  <method_type>VB</method_type>
  <name>AccessLogAdds</name>
 </Item>
</AML>